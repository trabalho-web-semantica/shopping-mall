import http.server
import socketserver
from urllib.parse import urlparse
from urllib.parse import parse_qs
import rdflib
from rdflib import Namespace
from rdflib.namespace import RDFS,RDF


class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def getHtml(self):
        graph = rdflib.Graph()
        ontologia = graph.parse('mall.rdf')

        site = Namespace("http://www.owl-ontologies.com/mall.owl#")


        print("Lojas que s√£o FoodStore:")
        foodStores = list(graph.triples((None,RDF.type, site.FoodStore)))

        for foodStore in foodStores:
            print(foodStore)

        print("Nome do produto hamburger:")
        print(graph.value(site.Hamburger, site.productName))

    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        name = 'World'
        query_components = parse_qs(urlparse(self.path).query)
        if 'name' in query_components:
            name = query_components["name"][0]

        # Some custom HTML code, possibly generated by another function
        html = self.getHtml()

        # Writing the HTML contents with UTF-8
        self.wfile.write(bytes("<h1>Hello</h1>", "utf-8"))

        return



PORT = 3000
Handler = MyHttpRequestHandler

with socketserver.TCPServer(("", PORT), Handler) as httpd:
    print("serving at port", PORT)
    httpd.serve_forever()